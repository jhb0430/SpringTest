<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="com.jhb0430.spring.test.mybatis.repository.RealEstateRepository">
 <select id="selectRealEstate"
 resultType="com.jhb0430.spring.test.mybatis.domain.RealEstate"
 parameterType="int" >
  
  SELECT
  		`id`
  		,`realtorId`
  		,`address`
  		,`area`
  		,`type`
  		,`price`
  		,`rentPrice`
  		,`createdAt`
  		,`updatedAt`
  FROM 
  		`real_estate`
  WHERE
  		`id`=#{id};
  		<!--  -->
  
  
  </select>
  
  <!-- 
  월세(rentPrice) 를 parameter 로 받고 해당하는 월세보다 낮은 매물을
  WHERE
  	`rentPrice` < #{rentPrice}; 
   -->
 <select id="selectRentPrice"
 resultType="com.jhb0430.spring.test.mybatis.domain.RealEstate"
 parameterType="int" >
  
  SELECT
  		`id`
  		,`realtorId`
  		,`address`
  		,`area`
  		,`type`
  		,`price`
  		,`rentPrice`
  		,`createdAt`
  		,`updatedAt`
  FROM 
  		`real_estate`
 WHERE
  	`rentPrice`<![CDATA[<]]> #{rentPrice}; 
  	<!-- 
  		1. <![CDATA[ "부등호"]]> : <![CDATA[  ]]>의 [] 안에 원하는 연산자를 입력하면 된다.
  		2.
  		기호			대체식		예제
		<				lt		salary &lt; 10000
		>				gt		salary &gt; 10000
  	
  	<![CDTA[
  		이 사이에 조건을 통째로 넣어도 된다
  	]>
  	
  	
  	-->
  
  </select>
  <!-- 3. 복합조건 셀렉트 -->
 <select id="selectPriceArea"
 resultType="com.jhb0430.spring.test.mybatis.domain.RealEstate"
 parameterType="map" >
  <!--  파라미터가 여러개면 타입은 map!  -->
  SELECT
  		`id`
  		,`realtorId`
  		,`address`
  		,`area`
  		,`type`
  		,`price`
  		,`rentPrice`
  		,`createdAt`
  		,`updatedAt`
  FROM 
  		`real_estate`
  WHERE
  		<!--넓이(area) - 매물의 넓이가 전달 받은 넓이 이상인 것
  		 가격(price) - 매물의 매매금이 전달받은 매매금 보다 이하인 것
  		  등록일을 기준으로 내림 차순으로 정렬하세요.
  		  -->
  		  <!-- `area` &gt; #{area}-->
  			<!--`price`&lt; #{price}-->
  		  <![CDATA[
  		  `area` >= #{area}
  		AND
  			`price`<= #{price}
  		  ]]>
  ORDER BY `createdAt` DESC;
  
  </select>
  
  <insert id="insertRealEstate" parameterType="map">
  	INSERT INTO
  		`real_estate`
		(
		`realtorId`
  		,`address`
  		,`area`
  		,`type`
  		,`price`
  		,`rentPrice`
		) 
		VALUE
		(
		#{realtorId}
		,#{address}
		,#{area}
		,#{type}
		,#{price}
		,#{rentPrice}
		
		);	 
  
  </insert>
  
  
  
  <insert id="insertRealEstateByObject" parameterType="com.jhb0430.spring.test.mybatis.domain.RealEstate">
  	INSERT INTO
  		`real_estate`
		(`realtorId`
  		,`address`
  		,`area`
  		,`type`
  		,`price`
		) 
		VALUE
		(
		#{realtorId}
		,#{address}
		,#{area}
		,#{type}
		,#{price}
		
		);	 
  
  </insert>
 
 <update id="updateRealEstate" parameterType="map">
 
 UPDATE `real_estate`
	SET 
		`type` =#{type}
		,`price` = #{price}
		,`updatedAt`=now()
	WHERE 
		`id` = #{id}; 
 </update>
 
 
 <delete id="deleteRealEstateById" parameterType="int">
 
 	DELETE 
 		FROM `real_estate`
 		WHERE 
 			`id` = #{id};
 
 </delete>
 
 </mapper>